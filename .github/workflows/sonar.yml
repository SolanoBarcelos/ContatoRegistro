name: Build & SonarCloud (main)

on:
  push:
    branches: [ "main" ]

jobs:
  sonar:
    runs-on: windows-latest
    env:
      SONAR_HOST_URL: https://sonarcloud.io
      SONAR_ORG: solanobarcelos
      SONAR_PROJECT_KEY: SolanoBarcelos_ContatoRegistro
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install SonarScanner for .NET
        run: dotnet tool update --global dotnet-sonarscanner

      # Em runners Windows, garanta o PATH das ferramentas dotnet
      - name: Add .NET tools to PATH
        shell: pwsh
        run: echo "$env:USERPROFILE\.dotnet\tools" >> $env:GITHUB_PATH

      - name: Begin SonarCloud analysis
        run: >
          dotnet-sonarscanner begin
          /k:"${{ env.SONAR_PROJECT_KEY }}"
          /o:"${{ env.SONAR_ORG }}"
          /d:sonar.host.url="${{ env.SONAR_HOST_URL }}"
          /d:sonar.token="${{ env.SONAR_TOKEN }}"
          /d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"
          /d:sonar.cs.cobertura.reportsPaths="**/TestResults/**/coverage.cobertura.xml"

      - name: Build
        run: dotnet build ContatoRegistro.sln --configuration Release --no-incremental

      - name: Test with coverage
        run: >
          dotnet test ContatoRegistro.sln
          --configuration Release
          --logger "trx;LogFileName=test-results.trx"
          --collect "XPlat Code Coverage"

      - name: End SonarCloud analysis
        run: dotnet-sonarscanner end /d:sonar.token="${{ env.SONAR_TOKEN }}"
